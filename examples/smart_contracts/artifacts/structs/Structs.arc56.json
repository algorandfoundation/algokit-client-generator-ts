{
    "name": "Structs",
    "structs": {
        "NestedStruct": [
            {
                "name": "content",
                "type": "Vector"
            }
        ],
        "RootStruct": [
            {
                "name": "nested",
                "type": "NestedStruct"
            }
        ],
        "Vector": [
            {
                "name": "x",
                "type": "string"
            },
            {
                "name": "y",
                "type": "string"
            }
        ]
    },
    "methods": [
        {
            "name": "hello",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "give_me_root_struct",
            "args": [],
            "returns": {
                "type": "(((string,string)))",
                "struct": "RootStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "opt_in",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "OptIn"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 2
            },
            "local": {
                "ints": 0,
                "bytes": 2
            }
        },
        "keys": {
            "global": {
                "my_struct": {
                    "keyType": "AVMString",
                    "valueType": "Vector",
                    "key": "bXlfc3RydWN0"
                },
                "my_nested_struct": {
                    "keyType": "AVMString",
                    "valueType": "RootStruct",
                    "key": "bXlfbmVzdGVkX3N0cnVjdA=="
                }
            },
            "local": {
                "my_localstate_struct": {
                    "keyType": "AVMString",
                    "valueType": "Vector",
                    "key": "bXlfbG9jYWxzdGF0ZV9zdHJ1Y3Q="
                },
                "my_nested_localstate_struct": {
                    "keyType": "AVMString",
                    "valueType": "RootStruct",
                    "key": "bXlfbmVzdGVkX2xvY2Fsc3RhdGVfc3RydWN0"
                }
            },
            "box": {
                "my_box_struct": {
                    "keyType": "AVMString",
                    "valueType": "Vector",
                    "key": "bXlfYm94X3N0cnVjdA=="
                },
                "my_nested_box_struct": {
                    "keyType": "AVMString",
                    "valueType": "RootStruct",
                    "key": "bXlfbmVzdGVkX2JveF9zdHJ1Y3Q="
                }
            }
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "my_boxmap_struct": {
                    "keyType": "uint64",
                    "valueType": "Vector",
                    "prefix": "bXlfYm94bWFwX3N0cnVjdA=="
                },
                "my_nested_boxmap_struct": {
                    "keyType": "uint64",
                    "valueType": "RootStruct",
                    "prefix": "bXlfbmVzdGVkX2JveG1hcF9zdHJ1Y3Q="
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        214,
                        244
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        202
                    ],
                    "errorMessage": "OnCompletion is not OptIn"
                },
                {
                    "pc": [
                        273
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        205,
                        217,
                        247
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiABASYGCgAEAAcAATEAATIOAAIAAgAEAAcAATEAATINbXlfYm94X3N0cnVjdBRteV9uZXN0ZWRfYm94X3N0cnVjdBhteV9ib3htYXBfc3RydWN0AAAAAAAAAHsfbXlfbmVzdGVkX2JveG1hcF9zdHJ1Y3QAAAAAAAAAezEYQAAhgAlteV9zdHJ1Y3QoZ4AQbXlfbmVzdGVkX3N0cnVjdClnMRtBAGKCAwQCvs4RBKSjzpoEMMbVijYaAI4DAC4AEAADgQBDMRkiEkQxGESIAF8iQzEZFEQxGESAEhUffHUAAgACAAQABwABMQABMrAiQzEZFEQxGEQ2GgGIABaABBUffHVMULAiQzEZQP+1MRgURCJDigEBi/9XAgCAB0hlbGxvLCBMUEkVFlcGAkxQiYoAACq8SCoovyu8SCspvycEvEgnBCi/JwW8SCcFKb8xAIAUbXlfbG9jYWxzdGF0ZV9zdHJ1Y3QoZjEAgBtteV9uZXN0ZWRfbG9jYWxzdGF0ZV9zdHJ1Y3QpZok=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 3,
            "patch": 3
        }
    },
    "events": [],
    "templateVariables": {}
}