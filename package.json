{
  "name": "@algorandfoundation/algokit-client-generator",
  "version": "0.0.0",
  "description": "Generates a TypeScript client for interacting with, and deploying ARC-0032 smart contracts on the Algorand Blockchain.",
  "main": "src/index.js",
  "module": "index.mjs",
  "private": false,
  "engines": {
    "node": ">=20.0"
  },
  "type": "commonjs",
  "scripts": {
    "audit": "better-npm-audit audit",
    "dev": "run-s dev:*",
    "dev:helloworld": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/hello_world/HelloWorld.arc32.json -o ./examples/smart_contracts/artifacts/hello_world/client.generated.ts",
    "dev:helloworld-pn": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/hello_world/HelloWorld.arc32.json -o ./examples/smart_contracts/artifacts/hello_world/client.pn.generated.ts -pn",
    "dev:reti": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/reti/Reti.arc56.json -o ./examples/smart_contracts/artifacts/reti/client.generated.ts",
    "dev:reti-pn": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/reti/Reti.arc56.json -o ./examples/smart_contracts/artifacts/reti/client.pn.generated.ts -pn",
    "dev:arc56_test": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/arc56_test/Arc56Test.arc56.json -o ./examples/smart_contracts/artifacts/arc56_test/client.generated.ts",
    "dev:arc56_test-pn": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/arc56_test/Arc56Test.arc56.json -o ./examples/smart_contracts/artifacts/arc56_test/client.pn.generated.ts -pn",
    "dev:lifecycle": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/life_cycle/LifeCycle.arc32.json -o ./examples/smart_contracts/artifacts/life_cycle/client.generated.ts",
    "dev:lifecycle-pn": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/life_cycle/LifeCycle.arc32.json -o ./examples/smart_contracts/artifacts/life_cycle/client.pn.generated.ts -pn",
    "dev:minimal": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/minimal/Minimal.arc32.json -o ./examples/smart_contracts/artifacts/minimal/client.generated.ts",
    "dev:minimal-pn": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/minimal/Minimal.arc32.json -o ./examples/smart_contracts/artifacts/minimal/client.pn.generated.ts -pn",
    "dev:state": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/state/State.arc32.json -o ./examples/smart_contracts/artifacts/state/client.generated.ts",
    "dev:state-pn": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/state/State.arc32.json -o ./examples/smart_contracts/artifacts/state/client.pn.generated.ts -pn",
    "dev:voting_round": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/voting_round/VotingRound.arc32.json -o ./examples/smart_contracts/artifacts/voting_round/client.generated.ts",
    "dev:voting_round-pn": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/voting_round/VotingRound.arc32.json -o ./examples/smart_contracts/artifacts/voting_round/client.pn.generated.ts -pn",
    "dev:duplicate_structs": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/duplicate_structs/DuplicateStructs.arc32.json -o ./examples/smart_contracts/artifacts/duplicate_structs/client.generated.ts",
    "dev:duplicate_structs-pn": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/duplicate_structs/DuplicateStructs.arc32.json -o ./examples/smart_contracts/artifacts/duplicate_structs/client.pn.generated.ts -pn",
    "dev:nested": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/nested/Nested.arc56.json -o ./examples/smart_contracts/artifacts/nested/client.generated.ts",
    "dev:nested-pn": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/nested/Nested.arc56.json -o ./examples/smart_contracts/artifacts/nested/client.pn.generated.ts -pn",
    "dev:nfd": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/nfd/Nfd.arc56.json -o ./examples/smart_contracts/artifacts/nfd/client.generated.ts",
    "dev:nfd-pn": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/nfd/Nfd.arc56.json -o ./examples/smart_contracts/artifacts/nfd/client.pn.generated.ts -pn",
    "dev:structs": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/structs/Structs.arc56.json -o ./examples/smart_contracts/artifacts/structs/client.generated.ts",
    "dev:structs-pn": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/structs/Structs.arc56.json -o ./examples/smart_contracts/artifacts/structs/client.pn.generated.ts -pn",
    "dev:zero_coupon_bond": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/zero_coupon_bond/ZeroCouponBond.arc56.json -o ./examples/smart_contracts/artifacts/zero_coupon_bond/client.generated.ts",
    "dev:zero_coupon_bond-pn": "tsx src/dev.ts generate -a ./examples/smart_contracts/artifacts/zero_coupon_bond/ZeroCouponBond.arc56.json -o ./examples/smart_contracts/artifacts/zero_coupon_bond/client.pn.generated.ts -pn",
    "build": "run-s build:*",
    "build:0-clean": "rimraf dist coverage",
    "build:1-schema-to-types": "cd src/schema && json2ts application.schema.json > application.d.ts",
    "build:2-lint": "eslint \"src/**/*.ts\" \"examples/**/*.spec.ts\" --max-warnings 0",
    "build:3-check-types": "tsc -p tsconfig.json",
    "build:4-check-types-non-strict": "tsc -p tsconfig.non-strict.json",
    "build:5-build": "rollup -c --configPlugin typescript",
    "build:6-copy-pkg-json": "npx --yes @makerx/ts-toolkit@latest copy-package-json --input-folder ./ --output-folder ./dist --main index.js --types index.d.ts --custom-sections module type ",
    "build:7-copy-bin": "copyfiles bin/* dist/bin -f",
    "build:8-copy-readme": "copyfiles ./README.md ./dist",
    "format": "prettier --write .",
    "lint": "eslint \"src/**/*.ts\"",
    "lint:fix": "eslint \"src/**/*.ts\" --fix",
    "test:watch": "vitest watch",
    "test": "vitest run",
    "test:ci": "TEST_ENV=ci vitest run --coverage",
    "update-approvals": "tsx scripts/update-approvals.ts",
    "pyteal-build": "poetry run python -m examples",
    "postinstall": "npx --yes patch-package",
    "pre-commit": "npm run lint:fix && npm run test && npm run audit && npm run build"
  },
  "bin": {
    "@algorandfoundation/algokit-client-generator": "bin/cli.mjs",
    "algokitgen": "bin/cli.mjs"
  },
  "author": "Algorand Foundation",
  "license": "MIT",
  "overrides": {
    "semver": "7.5.2",
    "micromatch": "4.0.8",
    "rollup": "^4.22.5",
    "cross-spawn": "^7.0.6",
    "esbuild": "0.25.0"
  },
  "dependencies": {
    "chalk": "^4.1.2",
    "change-case": "^5.4.4",
    "commander": "^11.1.0",
    "jsonschema": "^1.4.1"
  },
  "peerDependencies": {
    "@algorandfoundation/algokit-utils": "^7.0.1 || ^8.0.1",
    "algosdk": "^2.9.0 || ^3.0.0"
  },
  "devDependencies": {
    "@algorandfoundation/algokit-utils": "^8.0.1",
    "@algorandfoundation/tealscript": "^0.105.4",
    "@commitlint/cli": "^18.6.0",
    "@commitlint/config-conventional": "^18.6.0",
    "@eslint/js": "^9.16.0",
    "@makerx/prettier-config": "^2.0.0",
    "@makerx/ts-config": "1.0.1",
    "@noble/ed25519": "2.0.0",
    "@rollup/plugin-json": "^6.1.0",
    "@rollup/plugin-node-resolve": "^15.2.3",
    "@rollup/plugin-typescript": "^11.1.6",
    "@tsconfig/node20": "^20.1.2",
    "@types/wait-on": "^5.3.4",
    "better-npm-audit": "^3.7.3",
    "conventional-changelog-conventionalcommits": "7.0.2",
    "copyfiles": "^2.4.1",
    "eslint-config-prettier": "^9.1.0",
    "hi-base32": "^0.5.1",
    "json-schema-to-typescript": "^13.1.2",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.2.4",
    "rimraf": "^5.0.5",
    "rollup": "^4.22.5",
    "semantic-release": "^23.0.0",
    "tiny-invariant": "^1.3.1",
    "tsd": "^0.30.4",
    "tsx": "^4.7.0",
    "typescript": "^5.3.3",
    "typescript-eslint": "^8.16.0",
    "vitest": "^2.1.1",
    "wait-on": "^8.0.1"
  },
  "publishConfig": {
    "access": "public"
  },
  "release": {
    "branches": [
      {
        "name": "main",
        "prerelease": "beta"
      },
      {
        "name": "release"
      }
    ],
    "plugins": [
      [
        "@semantic-release/commit-analyzer",
        {
          "preset": "conventionalcommits",
          "releaseRules": [
            {
              "type": "build",
              "release": "patch"
            },
            {
              "type": "chore",
              "release": "patch"
            }
          ]
        }
      ],
      [
        "@semantic-release/release-notes-generator",
        {
          "preset": "conventionalcommits",
          "presetConfig": {
            "types": [
              {
                "type": "feat",
                "section": "Features"
              },
              {
                "type": "fix",
                "section": "Bug Fixes"
              },
              {
                "type": "build",
                "section": "Dependencies and Other Build Updates",
                "hidden": false
              }
            ]
          }
        }
      ],
      "@semantic-release/github"
    ]
  }
}
